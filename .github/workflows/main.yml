name: Build Telegram Desktop

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install CMake and Git
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install git -y
          choco install vswhere -y

      - name: Set up MSVC environment
        run: |
          $vsPath = & 'C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe' -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
          $env:INCLUDE = "$vsPath\VC\Tools\MSVC\<version>\include;$vsPath\VC\Auxiliary\VS\include;$vsPath\VC\Tools\MSVC\<version>\atlmfc\include;$vsPath\VC\Auxiliary\VS\UnitTest\include;$vsPath\VC\Auxiliary\VS\UI\include;C:\Program Files (x86)\Windows Kits\10\Include\<sdk_version>\ucrt;$env:INCLUDE"
          $env:LIB = "$vsPath\VC\Tools\MSVC\<version>\lib\x64;$vsPath\VC\Auxiliary\VS\lib\x64;$vsPath\VC\Tools\MSVC\<version>\atlmfc\lib\x64;$vsPath\VC\Auxiliary\VS\UI\lib\x64;C:\Program Files (x86)\Windows Kits\10\Lib\<sdk_version>\ucrt\x64;$env:LIB"
          $env:PATH = "$vsPath\VC\Tools\MSVC\<version>\bin\Hostx64\x64;$vsPath\Common7\Tools;$vsPath\Common7\IDE\VC\VCPackages;$vsPath\VC\Tools\MSVC\<version>\bin\Hostx64\x86;$vsPath\Common7\IDE\CommonExtensions\Microsoft\TestWindow;$vsPath\Team Tools\Performance Tools;C:\Program Files (x86)\Microsoft SDKs\F#\10.1\Framework\v4.7.1;C:\Program Files (x86)\Windows Kits\10\bin\x64;$env:PATH"

      - name: Download Qt Online Installer
        run: |
          Invoke-WebRequest -Uri "https://download.qt.io/official_releases/online_installers/qt-unified-windows-x64-online.exe" -OutFile qt-installer.exe

      - name: Create Qt install script
        run: |
          Set-Content -Path qt-install-script.qs -Value 'var installer = new QInstaller();'
          Add-Content -Path qt-install-script.qs -Value 'var components = ["qt.qt5.5152.win64_msvc2019"];'
          Add-Content -Path qt-install-script.qs -Value 'installer.setValue("components", components);'
          Add-Content -Path qt-install-script.qs -Value 'installer.setValue("installationPath", "C:/Qt/Qt5.15.2");'
          Add-Content -Path qt-install-script.qs -Value 'installer.setValue("autoAccept", true);'
          Add-Content -Path qt-install-script.qs -Value 'installer.setValue("acceptLicense", true);'
          Add-Content -Path qt-install-script.qs -Value 'installer.setValue("skipUpdate", true);'
          Add-Content -Path qt-install-script.qs -Value 'installer.install();'

      - name: Install Qt
        run: |
          Start-Process -FilePath qt-installer.exe -ArgumentList '--script qt-install-script.qs' -Wait
        shell: pwsh

      - name: Clone and prepare source
        run: |
          git clone --recursive https://github.com/TDesktop-x64/tdesktop.git
          cd tdesktop\Telegram\build
          .\prepare\win.bat

      - name: Configure
        run: |
          cd tdesktop\Telegram
          .\configure.bat x64 -D TDESKTOP_API_ID=${{ secrets.TDESKTOP_API_ID }} -D TDESKTOP_API_HASH=${{ secrets.TDESKTOP_API_HASH }}

      - name: Build
        run: msbuild tdesktop\out\Telegram.sln /p:Configuration=Release
